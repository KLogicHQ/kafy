
# üê≥ Kafka CLI ‚Äî Command Reference (Full Spec)

Root:

```bash
kaf [command] [subcommand] [flags]
```

---

## üìÇ Config Management (`kaf config`)

| Command                                                         | Description                     |
| --------------------------------------------------------------- | ------------------------------- |
| `kaf config list`                                               | List all configured clusters    |
| `kaf config current`                                            | Show the current active cluster |
| `kaf config use <name>`                                         | Switch to a different cluster   |
| `kaf config add <name> --bootstrap <server> [--zookeeper <zk>]` | Add a new cluster               |
| `kaf config delete <name>`                                      | Remove a cluster                |
| `kaf config rename <old> <new>`                                 | Rename a cluster context        |
| `kaf config export`                                             | Export config to YAML/JSON      |
| `kaf config import`                                             | Import config from YAML/JSON    |

---

## üì¶ Topics (`kaf topics`)

| Command                                                            | Description                               |
| ------------------------------------------------------------------ | ----------------------------------------- |
| `kaf topics list`                                                  | List all topics                           |
| `kaf topics describe <topic>`                                      | Show details of a topic                   |
| `kaf topics create <topic> --partitions <n> --replication <n>`     | Create a topic                            |
| `kaf topics delete <topic>`                                        | Delete a topic (with safety confirmation) |
| `kaf topics alter <topic> [--partitions <n>] [--config key=value]` | Alter partitions or configs               |
| `kaf topics config get <topic>`                                    | Show topic-level configs                  |
| `kaf topics config set <topic> key=value`                          | Set topic-level config                    |
| `kaf topics config delete <topic> key`                             | Remove a config override                  |

---

## üë• Consumer Groups (`kaf groups`)

| Command                                        | Description                           |
| ---------------------------------------------- | ------------------------------------- |
| `kaf groups list`                              | List all consumer groups              |
| `kaf groups describe <group>`                  | Show group details (members, offsets) |
| `kaf groups lag <group>`                       | Show lag metrics per partition        |
| `kaf groups reset <group> --to-earliest`       | Reset offsets to earliest             |
| `kaf groups reset <group> --to-latest`         | Reset offsets to latest               |
| `kaf groups reset <group> --to-timestamp <ts>` | Reset offsets to a timestamp          |
| `kaf groups delete <group>`                    | Delete a consumer group               |

---

## üì§ Producing Messages (`kaf produce`)

| Command                             | Description                            |        |                        |
| ----------------------------------- | -------------------------------------- | ------ | ---------------------- |
| `kaf produce <topic>`               | Produce messages interactively (stdin) |        |                        |
| `kaf produce <topic> --key <k>`     | Produce with key                       |        |                        |
| `kaf produce <topic> --file <path>` | Produce messages from file             |        |                        |
| \`kaf produce <topic> --format json | yaml                                   | avro\` | Specify message format |
| `kaf produce <topic> --count <n>`   | Send random test messages              |        |                        |

---

## üì• Consuming Messages (`kaf consume`)

| Command                                | Description              |         |               |
| -------------------------------------- | ------------------------ | ------- | ------------- |
| `kaf consume <topic>`                  | Consume interactively    |         |               |
| `kaf consume <topic> --group <id>`     | Consume as a group       |         |               |
| `kaf consume <topic> --from-beginning` | Start from beginning     |         |               |
| `kaf consume <topic> --limit <n>`      | Limit number of messages |         |               |
| \`kaf consume <topic> --output json    | yaml                     | table\` | Output format |

---

## üñ• Brokers (`kaf brokers`)

| Command                                  | Description                               |
| ---------------------------------------- | ----------------------------------------- |
| `kaf brokers list`                       | List all brokers                          |
| `kaf brokers describe <id>`              | Show broker metadata                      |
| `kaf brokers metrics`                    | Show broker metrics (disk, CPU, requests) |
| `kaf brokers configs list`               | List all broker configs                   |
| `kaf brokers configs get <id>`           | Show config for broker                    |
| `kaf brokers configs set <id> key=value` | Update broker config                      |

---

## üìä Offsets (`kaf offsets`)

| Command                                         | Description                      |
| ----------------------------------------------- | -------------------------------- |
| `kaf offsets show <topic>`                      | Show offsets per partition       |
| `kaf offsets reset <topic> --to-earliest`       | Reset all partitions to earliest |
| `kaf offsets reset <topic> --to-latest`         | Reset all partitions to latest   |
| `kaf offsets reset <topic> --to-timestamp <ts>` | Reset to timestamp               |

---

## üß™ Schemas (`kaf schemas`) *(if Schema Registry exists)*

| Command                          | Description                        |
| -------------------------------- | ---------------------------------- |
| `kaf schemas list`               | List all schemas                   |
| `kaf schemas get <id>`           | Get schema by ID                   |
| `kaf schemas subjects`           | List all schema subjects           |
| `kaf schemas versions <subject>` | List schema versions for a subject |
| `kaf schemas check <file>`       | Validate schema file               |

---

## üõ° ACLs & Security (`kaf acls`)

| Command                                                        | Description   |
| -------------------------------------------------------------- | ------------- |
| `kaf acls list`                                                | List all ACLs |
| `kaf acls add --allow --user <u> --operation <op> --topic <t>` | Add ACL       |
| `kaf acls remove --user <u> --topic <t>`                       | Remove ACL    |
| `kaf acls test --user <u> --operation <op> --topic <t>`        | Test access   |

---

## ü©∫ Health & Monitoring (`kaf health`)

| Command                      | Description                             |
| ---------------------------- | --------------------------------------- |
| `kaf health check`           | Run all checks (brokers, Zookeeper, SR) |
| `kaf health brokers`         | Check broker connectivity               |
| `kaf health zookeeper`       | Check Zookeeper status                  |
| `kaf health schema-registry` | Check Schema Registry health            |
| `kaf health topics`          | Verify topic partitions are balanced    |

---

## üß∞ Utilities (`kaf util`)

| Command                  | Description                    |
| ------------------------ | ------------------------------ |
| `kaf util random-key`    | Generate random Kafka key      |
| `kaf util dump-metadata` | Dump cluster metadata          |
| `kaf util export-topics` | Export all topic configs       |
| `kaf util import-topics` | Import topics from YAML/JSON   |
| `kaf util tail <topic>`  | Tail messages (like `tail -f`) |

---

## üåê UI (`kaf ui`)

| Command              | Description                             |
| -------------------- | --------------------------------------- |
| `kaf ui`             | Launch local web UI                     |
| `kaf ui --port 8080` | Run on custom port                      |
| `kaf ui --readonly`  | Read-only mode (no destructive actions) |

---

## üìù Output Formats

All commands support:

```bash
--output table   # default
--output json
--output yaml
```

Example:

```bash
kaf groups list --output json
```

---

## ‚úÖ Benefits Recap

* **Single entrypoint** like `kubectl` ‚Üí less mental overhead.
* **Context switching** ‚Üí run same commands across dev/staging/prod with ease.
* **Comprehensive** ‚Üí topics, groups, offsets, brokers, ACLs, schemas.
* **Extensible** ‚Üí JSON/YAML output + web UI.
* **Safer** ‚Üí confirmations in production.

---

üëâ This structure covers **almost everything Kafka engineers use daily**, but in a **consistent, kubectl-inspired way**.
