name: Build & Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            name: kaf-linux-amd64
          - os: ubuntu-latest  
            goos: linux
            goarch: arm64
            name: kaf-linux-arm64
          # macOS builds
          - os: macos-latest
            goos: darwin
            goarch: amd64
            name: kaf-macos-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            name: kaf-macos-arm64
          # Windows builds
          - os: windows-latest
            goos: windows
            goarch: amd64
            name: kaf-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          
      - name: Install librdkafka (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y librdkafka-dev
          
      - name: Install librdkafka (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install librdkafka
          
      - name: Install librdkafka (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # For Windows, we'll use the bundled librdkafka
          echo "Using bundled librdkafka for Windows"
          
      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p release
          go build -o release/${{ matrix.name }} .
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: release/${{ matrix.name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: release/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*/kaf-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}