name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install librdkafka development libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y librdkafka-dev

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install cross-compilation dependencies
      run: |
        # Install additional cross-compilation tools if needed
        sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64
        
    - name: Make build script executable
      run: chmod +x build.sh

    - name: Run build script
      run: ./build.sh

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kaf-binaries-${{ github.sha }}
        path: |
          release/dist/*
          release/kaf-*
        retention-days: 30

    - name: Create GitHub Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/dist/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ðŸš€ kaf - Kafka Productivity CLI ${{ github.ref_name }}
          
          A comprehensive Kafka productivity CLI tool that simplifies Kafka operations with a kubectl-like design philosophy.
          
          ### ðŸ“¦ Downloads
          
          **Linux:**
          - `kaf-${{ github.ref_name }}-linux-amd64.tar.gz` - Linux x86_64
          - `kaf-${{ github.ref_name }}-linux-arm64.tar.gz` - Linux ARM64
          
          **macOS:**
          - `kaf-${{ github.ref_name }}-darwin-amd64.tar.gz` - macOS Intel
          - `kaf-${{ github.ref_name }}-darwin-arm64.tar.gz` - macOS Apple Silicon
          
          **Windows:**
          - `kaf-${{ github.ref_name }}-windows-amd64.zip` - Windows x86_64
          
          ### ðŸ›  Installation
          
          1. Download the appropriate archive for your platform
          2. Extract the archive: `tar -xzf kaf-*.tar.gz` (Linux/Mac) or unzip `kaf-*.zip` (Windows)
          3. Move the `kaf` binary to your PATH
          4. Run `kaf --help` to get started
          
          ### ðŸŽ¯ Key Features
          
          - Context-aware operations across dev, staging, and prod clusters
          - Intelligent tab completion for all commands and resources
          - Real-time configuration fetching using DescribeConfigs API
          - Multiple output formats (table, JSON, YAML)
          - Comprehensive topic, broker, and consumer group management
          
          See the [README](https://github.com/KLogicHQ/kaf/blob/main/README.md) for complete usage instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-build:
    name: Test Build Script
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install librdkafka development libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y librdkafka-dev

    - name: Test build script
      run: |
        chmod +x build.sh
        ./build.sh
        
    - name: Verify packages were created
      run: |
        echo "Checking for distribution packages..."
        ls -la release/dist/ || echo "No dist directory found"
        echo "Checking for binaries..."
        ls -la release/kaf-* || echo "No binaries found"